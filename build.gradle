/**
 *
 * CARNIVAL ASYNC
 *
 */


///////////////////////////////////////////////////////////////////////////////
// build script settings
///////////////////////////////////////////////////////////////////////////////
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.23'
    }    
}


///////////////////////////////////////////////////////////////////////////////
// plugins
///////////////////////////////////////////////////////////////////////////////
plugins {
    id 'java'
    id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
    id 'maven-publish'
}


///////////////////////////////////////////////////////////////////////////////
// project
///////////////////////////////////////////////////////////////////////////////
group = 'edu.upenn.pmbb'
sourceCompatibility = 1.8
version = '0.3.1-SNAPSHOT'   // see https://semver.org/



///////////////////////////////////////////////////////////////////////////////
// dependencies
///////////////////////////////////////////////////////////////////////////////
repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}


configurations {
    apt
}


///////////////////////////////////////////////////////////////////////////////
// maven publishing
///////////////////////////////////////////////////////////////////////////////

publishToMavenLocal.dependsOn 'compileJava'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'carnival-gremlin-dsl'
            from components.java
            artifact sourcesJar
            //artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'Carnival Gremlin DSL'
                    description 'A concise description of Carnival Gremlin DSL'
                    url 'https://pennbiobank.github.io/carnival/'
                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'hjwilli'
                            name 'Heather Williams'
                            email 'hjwilli@gmail.com'
                        }
						developer {
                            id 'augustearth'
                            name 'David Birtwell'
                            email 'augustearth@gmail.com'
                        }
                    }
                    scm {
                        connection 'scm:git:git://github.com:pennbiobank/carnival.git'
                        developerConnection 'scm:git:ssh://github.com:pennbiobank/carnival.git'
                        url 'https://github.com/pennbiobank/carnival'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // Tinkerpop
    implementation 'org.apache.tinkerpop:gremlin-core:3.4.3'
    implementation 'org.apache.tinkerpop:gremlin-groovy:3.4.3'
    implementation 'org.apache.tinkerpop:tinkergraph-gremlin:3.4.3'

    // apt
    apt 'org.apache.tinkerpop:gremlin-core:3.4.3'

    // Neo4J
    implementation 'org.apache.tinkerpop:neo4j-gremlin:3.4.3'
    implementation 'org.neo4j:neo4j-tinkerpop-api-impl:0.9-3.4.0'
}


compileJava {
    options.annotationProcessorPath = configurations.apt
}
